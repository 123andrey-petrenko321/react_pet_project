{"version":3,"sources":["Components/app-header/AppHeader.js","Components/search-panel/SearchPanel.js","Components/post-status-filter/PostStatusFilter.js","Components/Image/Image.js","Components/post-list-item/PostListItem.js","Components/post-list/PostList.js","Components/post-add-form/PostAddForm.js","Components/app/App.js","Components/app/index.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","clazz","filter","key","onClick","onFilterSelect","Image","imgUrl","src","alt","PostListItem","like","onDelete","onToggleLiked","classNames","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","onAddImg","App","data","imgURL","deleteItem","addItem","maxId","body","newItem","imortant","index","findIndex","elem","before","slice","after","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcb0fab9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({ liked, allPosts }) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h2>{allPosts} Постов, из них понравилось {liked}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({ term })\r\n        this.props.onUpdateSearch(term)\r\n    }\r\n    render() {\r\n        return (\r\n            <input className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"поиск по записям\"\r\n                onChange={this.onUpdateSearch} />\r\n        );\r\n    }\r\n\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport './post-status-filter.css';\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.buttons = [\r\n            { name: 'all', label: 'Все' },\r\n            { name: 'like', label: 'Понрваилось' }\r\n        ]\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const active = this.props.filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button\r\n                    key={name}\r\n                    className={`btn ${clazz}`}\r\n                    onClick={() => this.props.onFilterSelect(name)}\r\n                > {label}</button >\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"btn-group\" >\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst Image = ({ imgUrl }) => {\r\n    return (\r\n        <div>\r\n            <img src={imgUrl}\r\n                alt='img'\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Image;","import React from 'react';\r\nimport './post-list-item.css';\r\nimport { Component } from 'react';\r\nimport Image from '../Image/Image';\r\n\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n\r\n    onLike() {\r\n        this.setState(({ like }) => ({\r\n            like: !like\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { label, onDelete, onToggleLiked, like, imgUrl } = this.props\r\n        let classNames = \"app-list-item d-flex justify-content-between\"\r\n        if (like) {\r\n            classNames += \" like\"\r\n        }\r\n\r\n        return (\r\n\r\n            <div className={classNames}>\r\n                <Image imgUrl={imgUrl} />\r\n                <span\r\n                    className=\" app-list-item-label \"\r\n                >\r\n                    <p className=\"textContent\">{label}</p>\r\n                </span>\r\n                <div className=\" buttonsGroup\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-star btn-sm\"\r\n                        onClick={onToggleLiked}\r\n                    >\r\n                        <i className=\"fa fa-heart\"></i>\r\n                    </button>\r\n                    <button\r\n                        type=\"button\" className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport PostListItem from '../post-list-item/PostListItem';\r\nimport './post-list.css';\r\nconst PostList = ({ posts, onDelete, onToggleLiked, imgUrl }) => {\r\n    const elements = posts.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem\r\n                    imgUrl={imgUrl}\r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}\r\n\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <ul className=\"app-list list-group\">\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;","import React, { Component } from 'react';\r\nimport './post-add-form.css';\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: '',\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.props.onAddImg()\r\n        this.setState({ text: '' })\r\n    }\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit} >\r\n                <textarea\r\n                    type=\"text\"\r\n                    placeholder=\"Ваш текст\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text} />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                >Добавить\r\n                </button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header/AppHeader';\r\nimport SearchPanel from '../search-panel/SearchPanel';\r\nimport PostStatusFilter from '../post-status-filter/PostStatusFilter';\r\nimport PostList from '../post-list/PostList';\r\nimport PostAddForm from '../post-add-form/PostAddForm';\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            term: '',\r\n            filter: 'all',\r\n            imgURL: ''\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.maxId = 0;\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.onAddImg = this.onAddImg.bind(this)\r\n\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            imortant: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n            const newArr = [...before, ...after];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n\r\n            const index = data.findIndex(elem => elem.id === id)\r\n            const old = data[index];\r\n            const newItem = { ...old, like: !old.like };\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n    onUpdateSearch(term) {\r\n        this.setState({ term })\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === \"like\") {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n    onFilterSelect(filter) {\r\n        this.setState({ filter })\r\n    }\r\n    onAddImg() {\r\n        this.setState({ imgURL: `https://picsum.photos//300/200` })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { data, term, filter, imgURL } = this.state\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <div className=\"app\" >\r\n                <AppHeader liked={liked} allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}\r\n                    />\r\n                </div>\r\n                <PostAddForm\r\n                    onAddImg={this.onAddImg}\r\n                    onAdd={this.addItem} />\r\n                <PostList\r\n                    imgUrl={imgURL}\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleLiked={this.onToggleLiked} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n","import App from './App';\r\nimport './index.css';\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Components/app/index';\nimport App from './Components/app/index'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}